# Copyright 2025 Xenon Emulator Project

name: Build

on: [push, pull_request]

concurrency:
  group: ci-${{github.event_name}}-${{github.ref}}
  cancel-in-progress: ${{github.event_name == 'push'}}

env:
  BUILD_TYPE: Release
  BUILD_DIR: ${{github.workspace}}/build

jobs:
  get-info:
    name: Info
    runs-on: ubuntu-24.04
    outputs:
      shorthash: ${{steps.vars.outputs.shorthash}}
      commit: ${{steps.vars.outputs.commit}}
    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    - name: Commit Count and Git Hash
      id: vars
      run: |
        echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "commit=$(git rev-list --count HEAD)" >> $GITHUB_ENV
        echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "commit=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

  Linux-Clang:
    name: Linux (Clang)
    runs-on: ubuntu-24.04
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y ninja-build clang lld cmake ccache \
                           libx11-dev libxext-dev libxrandr-dev libxcursor-dev \
                           libxi-dev libxinerama-dev libwayland-dev libxkbcommon-dev \
                           wayland-protocols git

    - name: Cache Dependencies
      uses: actions/cache@main
      with:
        path: |
          build
          Deps
        key: xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-deps-${{ hashFiles('build/x64-clang-${env.BUILD_TYPE}/Deps/ThirdParty/**/CMakeLists.txt', 'build/x64-clang-${env.BUILD_TYPE}/Deps/ThirdParty/**cmake/**') }}
        restore-keys: |
          xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-deps-ccache-

    - name: Cache CMake Build
      uses: hendrikmuhs/ccache-action@v1.2.18
      env:
        cache-name: xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-ccache
      with:
        append-timestamp: false
        key: xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-${{ hashFiles('**/*.cpp', '**/*.c', '**/*.h') }}

    - name: Configure CMake (Clang)
      run: cmake -G Ninja -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
                 -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --parallel $(nproc)

    - name: Prepare Artifact Folder
      run: |
        mkdir -p artifact
        cp -r ${{env.BUILD_DIR}}/Xenon artifact/xenon-clang-x64-${{env.BUILD_TYPE}}

    - name: Upload Linux Clang Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-linux-clang-x64-${{env.BUILD_TYPE}}-${{ needs.get-info.outputs.commit }}-${{needs.get-info.outputs.shorthash}}
        path: artifact/

  Linux-GCC:
    name: Linux (GCC)
    runs-on: ubuntu-24.04
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y ninja-build g++ cmake ccache \
                           libx11-dev libxext-dev libxrandr-dev libxcursor-dev \
                           libxi-dev libxinerama-dev libwayland-dev libxkbcommon-dev \
                           wayland-protocols git

    - name: Cache Dependencies
      uses: actions/cache@main
      with:
        path: |
          build
          Deps
        key: xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-deps-${{ hashFiles('build/x64-gcc-${env.BUILD_TYPE}/Deps/ThirdParty/**/CMakeLists.txt', 'build/x64-gcc-${env.BUILD_TYPE}/Deps/ThirdParty/**cmake/**') }}
        restore-keys: |
          xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-deps-ccache-

    - name: Cache CMake Build
      uses: hendrikmuhs/ccache-action@v1.2.18
      env:
        cache-name: xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-ccache
      with:
        append-timestamp: false
        key: xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-${{ hashFiles('**/*.cpp', '**/*.c', '**/*.h') }}

    - name: Configure CMake (GCC)
      run: cmake -G Ninja -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
                 -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --parallel $(nproc)

    - name: Prepare Artifact Folder
      run: |
        mkdir -p artifact
        cp -r ${{env.BUILD_DIR}}/Xenon artifact/xenon-gcc-amd64-${{env.BUILD_TYPE}}

    - name: Upload Linux GCC Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-linux-gcc-x64-${{env.BUILD_TYPE}}-${{ needs.get-info.outputs.commit }}-${{needs.get-info.outputs.shorthash}}
        path: artifact/


  Windows-Clang:
    name: Windows (Clang)
    runs-on: windows-2025
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Cache Dependencies
      uses: actions/cache@main
      with:
        path: |
          build
          Deps

        key: xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-deps-${{ hashFiles('build/x64-clang-${env.BUILD_TYPE}/Deps/ThirdParty/**/CMakeLists.txt', 'build/x64-clang-${env.BUILD_TYPE}/Deps/ThirdParty/**cmake/**') }}
        restore-keys: |
          xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-deps-ccache-

    - name: Cache CMake Build
      uses: hendrikmuhs/ccache-action@v1.2.18
      env:
        cache-name: xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-ccache
      with:
        append-timestamp: false
        key: xenon-${{runner.os}}-amd64-clang-${{env.BUILD_TYPE}}-${{ hashFiles('**/*.cpp', '**/*.c', '**/*.h') }}

    - name: Configure CMake (Clang)
      run: cmake -G Ninja -B "${{env.BUILD_DIR}}" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
                 -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build "${{env.BUILD_DIR}}" --config ${{env.BUILD_TYPE}} --parallel $env:NUMBER_OF_PROCESSORS

    - name: Prepare Artifact Folder
      run: |
        mkdir -p artifact
        cp -r ${{env.BUILD_DIR}}/Xenon.exe artifact/xenon-clang-x64-${{env.BUILD_TYPE}}.exe

    - name: Upload Windows Clang Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-win64-clang-${{env.BUILD_TYPE}}-${{ needs.get-info.outputs.commit }}-${{needs.get-info.outputs.shorthash}}
        path: artifact/

  Windows-GCC:
    name: Windows (GCC via MSYS2)
    runs-on: windows-2025
    needs: get-info
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >
          git
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-ninja
          mingw-w64-ucrt-x86_64-ccache
          make

    - name: Cache Dependencies
      uses: actions/cache@main
      with:
        path: |
          build
          Deps

        key: xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-deps-${{ hashFiles('build/x64-gcc-${env.BUILD_TYPE}/Deps/ThirdParty/**/CMakeLists.txt', 'build/x64-gcc-${env.BUILD_TYPE}/Deps/ThirdParty/**cmake/**') }}
        restore-keys: |
          xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-deps-ccache-

    - name: Cache CMake Build
      uses: hendrikmuhs/ccache-action@v1.2.18
      env:
        cache-name: xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-ccache
      with:
        append-timestamp: false
        key: xenon-${{runner.os}}-amd64-gcc-${{env.BUILD_TYPE}}-${{ hashFiles('**/*.cpp', '**/*.c', '**/*.h') }}

    - name: Configure CMake (GCC)
      run: cmake -G Ninja -B "${{env.BUILD_DIR}}" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
                 -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build "${{env.BUILD_DIR}}" --config ${{env.BUILD_TYPE}} --parallel

    - name: Prepare Artifact Folder
      run: |
        mkdir -p artifact
        cp -r "${{github.workspace}}/build/Xenon.exe" "artifact/xenon-gcc-amd64-${{env.BUILD_TYPE}}.exe"

    - name: Upload Windows-GCC Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-win64-gcc-${{env.BUILD_TYPE}}-${{needs.get-info.outputs.commit}}-${{needs.get-info.outputs.shorthash}}
        path: artifact/

  linux_nix:
    name: Linux (nix)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - uses: cachix/install-nix-action@master
      - name: Build Xenon
        run: nix build .#xenon -L
      - name: Build Xenon-cli
        run: nix build .#xenon-cli -L

  macOS:
    name: macOS (ARM)
    runs-on: macos-latest
    needs: get-info
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup latest Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install Dependencies (macOS)
        run: |
          brew install llvm@20

      - name: Cache CMake Configuration
        uses: actions/cache@main
        env:
          cache-name: xenon-${{runner.os}}-aarch64-clang-{{env.BUILD_TYPE}}-config-cache
        with:
          path: |
            ${{github.workspace}}/build
          key: xenon-${{runner.os}}-aarch64-clang-${{env.BUILD_TYPE}}-deps-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          restore-keys: |
            xenon-${{runner.os}}-aarch64-clang-${{env.BUILD_TYPE}}-deps-ccache-

      - name: Cache CMake Build
        uses: hendrikmuhs/ccache-action@v1.2.18
        env:
          cache-name: xenon-${{runner.os}}-aarch64-clang-${{env.BUILD_TYPE}}-ccache
        with:
          append-timestamp: false
          key: xenon-${{runner.os}}-aarch64-clang-${{env.BUILD_TYPE}}-${{ hashFiles('**/*.cpp', '**/*.c', '**/*.h') }}

      - name: Configure CMake
        run: |
          export PATH="/opt/homebrew/opt/llvm@20/bin:$PATH"
          export CPPFLAGS="-I/opt/homebrew/opt/llvm@20/include"
          export LDFLAGS="-L/opt/homebrew/opt/llvm@20/lib"
          cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=$(brew --prefix llvm@20)/bin/clang -DCMAKE_CXX_COMPILER=$(brew --prefix llvm@20)/bin/clang++ -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: |
          export PATH="/opt/homebrew/opt/llvm@20/bin:$PATH"
          export CPPFLAGS="-I/opt/homebrew/opt/llvm@20/include"
          export LDFLAGS="-L/opt/homebrew/opt/llvm@20/lib"
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $(nproc)

      - name: Prepare Artifact Folder
        run: |
          mkdir -p artifact
          cp -r ${{env.BUILD_DIR}}/Xenon artifact/xenon-clang-arm64-${{env.BUILD_TYPE}}

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@main
        with:
          name: Xenon-${{runner.os}}-clang-arm64-${{ needs.get-info.outputs.commit }}-${{needs.get-info.outputs.shorthash}}
          path: artifact/
